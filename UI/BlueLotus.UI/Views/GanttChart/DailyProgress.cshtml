@{
    ViewBag.Title = "DailyProgress";
    Layout = "~/Views/Shared/_GanttLayout.cshtml";
}

@*<hgroup class="title">
    <h1>Order Now</h1>

</hgroup>
*@

<div id="supervicer" style="/*background-color: #DCDCDC; */ padding-left: 40px; padding-top: 58px; margin-top: 1px; margin-left: 160px;">
    <div id="addChng" style="background-color: #FFFFFF; border: 2px solid #07789E; margin-left: 140px; margin-top: -40px; width: 630px;">
        <div id="Hdr1" style="margin-top: -2px; background-color:  #E3F0F7; margin-left: -1px; border: 2px solid #07789E; padding: 5px;">
           Daily Progress
        </div>
        <div id="findHdr" style="width: 400px;margin-left:140px;margin-top:20px;">
           
                
              @*  <div style="width:100px; margin-top:5px;">
                    <label>Project Id</label>
                    </div>
                    <div style="margin-left:180px;margin-top:-10px;">
                  <select id="Address"
                      data-role="combobox" 
                      data-placeholder="Select Project id...."
                      data-text-field="PrjKy"
                      data-value-field="PrjKy"
                      data-bind="source:ProjectNamesDataSource , value : ProjecId ">
                  </select>
                        </div>*@
                
                <div style="width:100px; margin-top:5px;">
                   <div style="width:100px;">
                    <label>Date </label>
                    </div>
                 <div style="margin-left:180px; margin-top:-15px;">
                  <input id="dateFrom" 
                      class=""
                      data-role="datepicker"
                      data-bind="value: Date" />
                     </div>
                       </div>
             <div style=" margin-top:5px;">
                 <label>Project</label>
                   
                   <div style="margin-left:180px;margin-top:-10px;">
                  <select id="dlivNo"
                      class=""
                      data-role="combobox"
                      data-placeholder="Select project name...."
                      data-text-field="DocNo"
                      data-value-field="PrjKy"
                      data-bind="source:ProjectNamesDataSource, value : ProjectName">
                  </select>
                       </div>
                 <div style=" margin-top:10px;margin-left:100px;">
                 @* <button type="button" class="k-button" id="Search"  data-bind="click: SearchrBtnClick">Search</button>*@
                      <button class="k-button" id="btnAddItem" data-bind="click: OrderAddClick" title="Add Items" style="width: 50px; height: 30px"><img src="~/Images/Add.PNG" /></button>
                  <button class="k-button" id="btnSave" data-bind="click: NewOrderSaveClick" title="Save" style="width:50px; height:30px"><img src="~/Images/Save1.PNG" /></button>
                  <button class="k-button" id="btnCancel" data-bind="click: NewOrderCancelClick"  title="Cancel" style="width: 50px; height: 30px"><img src="~/Images/Cancel.PNG" /></button>
                </div>
               @* <div style="margin-left:180px; margin-top:-5px;">
                  <button type="button" class="k-button" id="DlyPgsSearch" style="margin-top:10px;" data-bind="click: SelectOrderBtnClick">Daily Progress Search</button>
                </div>*@
            </div>
             
        </div>
        <div id="SearchWindow"
            style="border: 2px solid #A9A9A9; margin-top: 10px; margin-left: 10px; margin-right: 10px; margin-bottom: 10px; border-radius: 5px; height:350px;">
            <div>
                <div style="display: none;">
                    <select id="Item"
                        data-role="combobox"
                        data-text-field="PrcsID"
                        data-value-field="PrcsID"
                        data-bind="source:ItemDataSource">
                    </select>
                </div>

            </div>
            <div>
                <div style="padding-top: 5px; padding-bottom: 5px;">
                </div>
                
                   <div style="padding-top: 5px; padding-bottom: 5px; margin-left:130px;">
                    <span id="Itm" style="width: 200px;">TaskId</span>
                    <input class="k-textbox" id="Itmcode" style="width: 120px; height: 25px;margin-top:3px;" />
                    <span id="Amt" style="width: 100px;margin-left:25px;">Qty</span>
                    <input id="ItemAmount" style="width: 120px; height: 20px;" />
                      @*  <span id="Per" style="width: 100px;">Fini Per%</span>
                    <input   id="PerAmount" style="width: 100px; height: 20px;" />*@
                
                   
                </div>
            </div>
            <div id="ItemGrid" style="height: 270px; margin-left: 5px; margin-top: 10px; margin-right: 5px;"
                 data-role="grid"
                 data-bind="source: ItemGridDataSource"
                 data-editable="true"
                 data-selectable="true"
                 data-scrollabal="{virtual:true}"
                 data-pageable="true"
                 data-columns='[
                {"field": "TaskId", "title": "Task Id"},
                 {"field": "PrcsDetKy", "title": "PrcsDetKy" , "hidden":"True"},
                               {"field": "Qty", "title": "Qty"},
                              {"field": "Des", "title": "Description"},
                                {"field": "NxtActDt", "title": "NxtActDt",
                 "format":"{0:dd-MM-yyyy}"},
                 {"command": "destroy" , "title": " " , "width" :"110px" }
                 ]' />
        </div>
           
    </div>

</div>
<script id="command-template" type="text/x-kendo-template">
        <a class="k-button k-grid-evenselect">X</a>
</script>
@*<script id="command-template" style="width:12px; height: 26px; vertical-align: middle; text-align: center;" type="text/x-kendo-template">
    <a class="k-button k-grid-evenselect">X</a>
</script>*@
<script>

    var gridAddItems;

    function AddDataItems() { aleart("Hi") }
    var Item = kendo.data.Model.define({
        fields: {
            "TaskId": {
                type: "string",
                editable: false
            },
            "Qty": {
                type: "number",
                editable: true
            },
            "Des": {
                type: "string",
                editable: true
            },
            "NxtActDt": {
                type: "date",
                editable: true
            },
            "FinPer": {
                type: "number",
                editable: true
            }
            
        }
    });

    var ItemGridData = new kendo.data.DataSource({
        data: [
        ],
        serverPaging: true,
        schema: {
            model: Item
        },
        pageSize: 10
    });

    var ProjectNamesData = new kendo.data.DataSource({
        transport: {
            read: {
                url: '@Url.Action("GetProjectListByPrntKy", "Home")',
                data:{key:1},
                dataType: "json"
            }
        }
    });


    //onChange: function() {
    //    kendoConsole.log("event :: change (" + this.displaySelectedProduct() + ")");
    //},

   
    var ItemData = new kendo.data.DataSource({
        transport: {
            read: {
                url: '@Url.Action("GetTaskData", "Home")',
                dataType: "json",
               
            }
        }
        });

        var PreviuosWOData = new kendo.data.DataSource({
            data: [],
            schema: {
                model: kendo.data.Model.define({
                    fields: {
                        "OrdKy": {
                            type: "number",
                            editable: false
                        },
                        "OrdNo": {
                            type: "number",
                            editable: false
                        }
                    }
                })
            },
            pageSize: 10
        });

        var OrdDataSource = new kendo.data.DataSource({
            data: [],
            schema: {
                model: kendo.data.Model.define({
                    fields: {
                        "TaskId": {
                            type: "string",
                            editable: false
                        },
                        "TaskName": {
                            type: "string",
                            editable: false
                        },
                        "Qty": {
                            type: "number",
                            editable: true
                        },
                        "FinPer": {
                            type: "number",
                            editable: true
                        }
                    }
                })
            },
            pageSize: 10
        });

       

        var viewModel = kendo.observable({
            Date:new Date(),
          
            ProjectName: null,
          
           
            SearchWindow: false,

            ProjectNamesDataSource: ProjectNamesData,
            ItemDataSource: ItemData,
          
            //DeliveryNamesDataSource: DeliveryNamesData,
            //OrderDayDataSource: OrderDayData,
            ItemGridDataSource: ItemGridData,
           

            SearchrBtnClick: searchrBtnClickEvent,
            //SelectOrderBtnClick: SelectOrderClickEvent,
            //SearchrPrgsBtnClick:SearchrPrgsBtnClickevent,
            NewOrderSaveClick: NewOrderSaveClickEvent,
            OrderAddClick: OrderAddClickEvent,
            NewOrderCancelClick: NewOrderCancelClickEvent,
            //ItemGridSelectDataSource: PreviuosWOData,
            //onChange: onChangeEvent,
        });

        var SelectOrderModel = kendo.observable({
            DlyPrgsSelectWindow: false,
            ItemGridSelectDataSource: PreviuosWOData,
            //OrdGridSelectDataSource:OrdDataSource,
            ItemSelectDataSource: null
            //selectedRow: null
        });

        var SelectPreviousViewModal = kendo.observable({
            DlyPrgsSelectWindow: false,
            PreviosWOData: []

        })

        function NewOrderCancelClickEvent(e) {
            $("#Itmcode").val(null);
            $("#ItemAmount").val(null);
            $("#PerAmount").val(null);
            $("#ItemAmount").kendoNumericTextBox({
                min: 0.0000
            });
            $("#PerAmount").kendoNumericTextBox({
                min: 0
            });
            viewModel.set("Date", null);
            viewModel.set("ProjectName", null);
            viewModel.set("ProjectId", null);
             $("#ItemGrid").data("kendoGrid").dataSource.filter(null);
             
           
        }

       
            //this.set('FinPer', e.sender.element.val());
           // $("#FinPer").value($("#PerAmount").val())
            //$.each(viewModel.ItemDataSource.data(), function (index, model) {
            //    var exchangeTest = model.set("FinPer", model);
            //});
          
        //}
        function searchrBtnClickEvent(e) {
            //$("#DlyPrgsSelectWindow").data("kendoWindow").close();
            $("#SearchWindow").slideToggle("slow", null);
            gridAddItems = $("#ItemGrid").data("kendoGrid");
            $("#Itmcode").val(null);
            $("#ItemAmount").val(null);
            $("#PerAmount").val(null);
            $("#ItemAmount").kendoNumericTextBox({
                min: 0
            });
            $("#PerAmount").kendoNumericTextBox({
                min: 0
            });

           

            //$("#PerAmount").kendoNumericTextBox({
            //    change: changeFinanceCharge,
            //    // value: hrdData[0].FinCharge
            //});

           
        }

        function changeFinanceCharge() {
            var numerictextboxFinanceCharge = $("#PerAmount").data("kendoNumericTextBox");
            $.each(viewModel.ItemDataSource.data(), function (index, model) {
                model.set("FinPer", ( numerictextboxFinanceCharge.value()));
            });

            //grid.tbody.find("tr[role='row']").each(function (e) {
            //    var model = grid.dataItem(this);
            //    $(this).set('FinPer', val);
            //});
        }

        function SelectOrderClickEvent(e) { }

        function SelectOrderClickEvent(e) {

            $("#DlyPrgsSelectWindow").data("kendoWindow").center().open()
           @* $("#NewOrderWindow").hide();
            if (viewModel.AddressName != null && viewModel.AddressName != undefined && viewModel.AddressName != "" &&
                 viewModel.DeliveryNo != null && viewModel.DeliveryNo != undefined && viewModel.DeliveryNo != "" &&
                 viewModel.OrderDay != null && viewModel.OrderDay != undefined && viewModel.OrderDay != "") {

                $.ajax({
                    type: "POST",
                    dataType: "json",
                    url: '@Url.Action("GetOrderItemList", "Order")',
                data: {
                    strAdrKy: $("#Address").data("kendoComboBox").select(),
                    strRecurDlvNoKy: (viewModel.DeliveryNo != null) ? viewModel.DeliveryNo.CdKy : null,
                    strRecurOrdDayKy: (viewModel.OrderDay != null) ? viewModel.OrderDay.CdKy : null
                }, 
                success: function (data) {
                    if (data.length > 0) {
                        var retunDataSource = data;
                        kendo.bind($("#OrderSelectWindow"), SelectPreviousViewModal)
                        $("#OrderSelectWindow").data("kendoWindow").center().open()
                        for (var i = 0; i < data.length; i++) {
                            $("#OrderSelectGrid").data("kendoGrid").dataSource.add({ "OrdKy": data[i].OrdKy, "OrdNo": data[i].OrdNo });
                        }
                    } else {
                        alert("Cannot find any matching Work Orders !")
                    }
                }
            })
        } else {
            alert("Please select mentatory feilds");
            $('#agree1').prop('checked', false);
        }*@
    }

    function OrderAddClickEvent() {
        var PrjKy = $("#dlivNo").data("kendoComboBox").value();

        $.ajax({
            url: '@Url.Content("~/Home/GetTaskData")',
                dataType: "json",
                type: "POST",
                data: {
                    'PrjKy': PrjKy,
                },
                success: function (list) {

                    var inputValue = $("#Itmcode").val();
                    if (inputValue != null && inputValue != undefined && inputValue != '') {
                        var foundItem = jQuery.grep(list, function (a) {
                            return a.TaskId == inputValue;

                        })
                        if (foundItem != null && foundItem != undefined) {
                            if (foundItem.length == 0) {
                                alert("Cannot find the item !");
                                $("#Itmcode").val(null);
                                $("#ItemAmount").val(null);
                                $("#PerAmount").val(null);
                                $("#Itmcode").focus();
                            } else {
                                var amount = $("#ItemAmount").val();
                                // var inputValue1 = $("#PerAmount").val();
                                if (amount != null && amount != undefined && amount != '') {
                                    var addedItems = $("#ItemGrid").data("kendoGrid")._data
                                    if (addedItems.length > 0) {
                                        var foundInAddedItems = jQuery.grep(addedItems, function (a) {
                                            return a.TaskId == inputValue;

                                        })
                                        if (foundInAddedItems.length > 0) {
                                            $("#ItemGrid").data("kendoGrid").dataSource.add({ TaskId: foundItem[0].TaskId, PrcsDetKy: foundItem[0].PrcsDetKy, Qty: amount })
                                            //alert("Item already added !")
                                            $("#Itmcode").val(null);
                                            $("#ItemAmount").val(null);
                                            $("#PerAmount").val(null);
                                            $("#Itmcode").focus();
                                        } else {
                                            $("#ItemGrid").data("kendoGrid").dataSource.add({ TaskId: foundItem[0].TaskId, PrcsDetKy: foundItem[0].PrcsDetKy, Qty: amount })
                                            $("#Itmcode").val(null);
                                            $("#ItemAmount").val(null);
                                            $("#PerAmount").val(null);
                                            $("#Itmcode").focus();
                                        }
                                    } else {
                                        $("#ItemGrid").data("kendoGrid").dataSource.add({ TaskId: foundItem[0].TaskId, PrcsDetKy: foundItem[0].PrcsDetKy, Qty: amount })
                                        $("#Itmcode").val(null);
                                        $("#ItemAmount").val(null);
                                        $("#PerAmount").val(null);
                                        $("#Itmcode").focus();
                                    }
                                } else if (amount != null && amount != undefined && amount != '') {
                                    var addedItems = $("#ItemGrid").data("kendoGrid")._data
                                    if (addedItems.length > 0) {
                                        var foundInAddedItems = jQuery.grep(addedItems, function (a) {
                                            return a.TaskId == inputValue;

                                        })
                                        if (foundInAddedItems.length > 0) {
                                            alert("Item already added !")
                                            $("#Itmcode").val(null);
                                            $("#ItemAmount").val(null);
                                            $("#PerAmount").val(null);
                                            $("#Itmcode").focus();
                                        } else {
                                            $("#ItemGrid").data("kendoGrid").dataSource.add({ TaskId: foundItem[0].TaskId, PrcsDetKy: foundItem[0].PrcsDetKy, Qty: amount })
                                            $("#Itmcode").val(null);
                                            $("#ItemAmount").val(null);
                                            $("#PerAmount").val(null);
                                            $("#Itmcode").focus();
                                        }
                                    } else {
                                        $("#ItemGrid").data("kendoGrid").dataSource.add({ TaskId: foundItem[0].TaskId, PrcsDetKy: foundItem[0].PrcsDetKy, Qty: amount })
                                        $("#Itmcode").val(null);
                                        $("#ItemAmount").val(null);
                                        $("#PerAmount").val(null);
                                        $("#Itmcode").focus();
                                    }
                                }
                            }
                        }
                    } else {
                        alert("Please insert an Task Id !")
                    }

                },
                error: function (e) {

                }

            });

    }
    function ClearAddNewFormData() {
        $("#dateFrom").val(null);
        $("#Address").val(null);
        $("#DeliveryNo").val(null);
        $("#OrderDay").val(null);

        viewModel.set("OrderDate", null);
        viewModel.set("AddressName", null);
        viewModel.set("DeliveryNo", null);
        viewModel.set("OrderDay", null);
    }




    function NewOrderSaveClickEvent() {
        var gridData = $("#ItemGrid").data().kendoGrid.dataSource.view();
        if (gridData.length > 0 && viewModel.Date != null && viewModel.Date != undefined && viewModel.Date != ""
            && viewModel.ProjectName != null && viewModel.ProjectName != undefined && viewModel.ProjectName != ""
         ) {

            $.ajax({
                url: "@Url.Content("~/Home/InsertDlyProgress")",
                data: JSON.stringify({
                    strDate: viewModel.Date,
                    strProjectName: viewModel.ProjectName.PrjKy,
                    gridData: gridData,
                    OurCd: "PrjDlyPrgrs",
                    ConCd: "TrnTyp"
                }),
                contentType: 'application/json; charset=utf-8',
                dataType: "Json",
                type: "POST",
                success: function (data) {
                    alert("Task successfully saved !")
                    viewModel.set("Date",null);
                    viewModel.set("ProjectName", null);
                    $('#ItemGrid').data("kendoGrid").dataSource.filter(null);
                    var grid = $("#ItemGrid").data("kendoGrid");
                    grid.dataSource.data([]);
                    $("#ItemGrid").data("kendoGrid").dataSource.filter(null);
                    //$("#SearchWindow").slideToggle("slow", null);
                  
                },
                error: function (e) {
                    return false;
                }
            });
        }
        else {
            alert("Please add items !")
        }
    }


    $("#Itmcode").keypress(function (event) {

        var keycode = (event.keyCode ? event.keyCode : event.which);
        if (keycode == '13') {
            $("#ItemAmount").data("kendoNumericTextBox").focus();
        }
    });
    $("#ItemAmount").keypress(function (event) {
      

        var keycode = (event.keyCode ? event.keyCode : event.which);
        if (keycode == '13') {

            var PrjKy = $("#dlivNo").data("kendoComboBox").value();

            $.ajax({
                url: '@Url.Content("~/Home/GetTaskData")',
                dataType: "json",
                type: "POST",
                data: {
                    'PrjKy': PrjKy,
                },
                success: function (list) {
                   
                        var inputValue = $("#Itmcode").val();
                        if (inputValue != null && inputValue != undefined && inputValue != '') {
                            var foundItem = jQuery.grep(list, function (a) {
                                return a.TaskId == inputValue;

                            })
                            if (foundItem != null && foundItem != undefined) {
                                if (foundItem.length == 0) {
                                    alert("Cannot find the item !");
                                    $("#Itmcode").val(null);
                                    $("#ItemAmount").val(null);
                                   
                                    $("#Itmcode").focus();
                                } else {
                                    var amount = $("#ItemAmount").val();
                                    // var inputValue1 = $("#PerAmount").val();
                                    if (amount != null && amount != undefined && amount != '') {
                                        var addedItems = $("#ItemGrid").data("kendoGrid")._data
                                        if (addedItems.length > 0) {
                                            var foundInAddedItems = jQuery.grep(addedItems, function (a) {
                                                return a.TaskId == inputValue;

                                            })
                                            if (foundInAddedItems.length > 0) {
                                               // $("#ItemGrid").data("kendoGrid").dataSource.add({ TaskId: foundItem[0].TaskId, PrcsDetKy: foundItem[0].PrcsDetKy, Qty: amount })
                                                alert("Item already added !")
                                                $("#Itmcode").val(null); 
                                                $("#ItemAmount").val(null);
                                             
                                                $("#Itmcode").focus();
                                            } else {
                                                $("#ItemGrid").data("kendoGrid").dataSource.add({ TaskId: foundItem[0].TaskId, PrcsDetKy: foundItem[0].PrcsDetKy, Qty: amount })
                                                $("#Itmcode").val(null);
                                                $("#ItemAmount").val(null);
                                               
                                                $("#Itmcode").focus();
                                            }
                                        } else {
                                            $("#ItemGrid").data("kendoGrid").dataSource.add({ TaskId: foundItem[0].TaskId, PrcsDetKy: foundItem[0].PrcsDetKy, Qty: amount })
                                            $("#Itmcode").val(null);
                                            $("#ItemAmount").val(null);
                                            
                                            $("#Itmcode").focus();
                                        }
                                    } else if (amount != null && amount != undefined && amount != '') {
                                        var addedItems = $("#ItemGrid").data("kendoGrid")._data
                                        if (addedItems.length > 0) {
                                            var foundInAddedItems = jQuery.grep(addedItems, function (a) {
                                                return a.TaskId == inputValue;

                                            })
                                            if (foundInAddedItems.length > 0) {
                                                alert("Item already added !")
                                                $("#Itmcode").val(null);
                                                $("#ItemAmount").val(null);
                                               
                                                $("#Itmcode").focus();
                                            } else {
                                                $("#ItemGrid").data("kendoGrid").dataSource.add({ TaskId: foundItem[0].TaskId, PrcsDetKy: foundItem[0].PrcsDetKy, Qty: amount })
                                                $("#Itmcode").val(null);
                                                $("#ItemAmount").val(null);
                                             
                                                $("#Itmcode").focus();
                                            }
                                        } else {
                                            $("#ItemGrid").data("kendoGrid").dataSource.add({ TaskId: foundItem[0].TaskId, PrcsDetKy: foundItem[0].PrcsDetKy, Qty: amount })
                                            $("#Itmcode").val(null);
                                            $("#ItemAmount").val(null);
                                           
                                            $("#Itmcode").focus();
                                        }
                                    }
                                }
                            }
                        } else {
                            alert("Please insert an Task Id !")
                        }
                    
                    },
                    error: function (e) {

                    }
                
            });
            //  $("#PerAmount").data("kendoNumericTextBox").focus();
            }
    });

  

 $("#dateFrom").width(182).kendoDatePicker({

        format: "dd/MM/yyyy",
        min: new Date(31, 2, 2009)
    });

    $("#dateFrom").closest("span.k-datepicker").width(140);

    $("#OrderSelectGrid").on("click", ".k-grid-evenselect", function () {
        var grid = $("#OrderSelectGrid").data("kendoGrid");
        var selectedIndex = grid.select();
        if (selectedIndex != null && selectedIndex != undefined) {
            var dataItem = grid.dataItem(selectedIndex)
            if (dataItem != null && dataItem != undefined) {
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    url: '@Url.Action("GetOrderDetails", "Order")',
                        data: {
                            strOrdKy: dataItem.OrdKy
                        },
                        success: function (data) {
                            $("#NewOrderWindow").slideToggle("slow", null);
                            for (var i = 0; i < data.length; i++) {
                                $("#ItemGrid").data("kendoGrid").dataSource.add({ ItmKy: data[0].ItmKy, ItmCd: data[0].ItmCd, ItmNm: data[0].ItmNm, unit: data[0].unit, Qty: data[0].Qty })
                            }
                            $("#OrderSelectWindow").data("kendoWindow").close();
                        }
                    })
                }
                else {
                    alert("Cannot find any matching Orders !");
                }
            }
        });

        kendo.bind($('#EditWindow'), SelectOrderModel);
        kendo.bind($("#addChng"), viewModel);

        $(document).ready(function () {
            //$("#DlyPrgsSelectWindow").data("kendoWindow").hide();
            
            $("#SearchWindow").show();
            gridAddItems = $("#ItemGrid").data("kendoGrid");
            $("#Itmcode").val(null);
            $("#ItemAmount").val(null);
            $("#PerAmount").val(null);
            $("#ItemAmount").kendoNumericTextBox({
                min: 0
            });
            $("#PerAmount").kendoNumericTextBox({
                min: 0
            });
            var height = $('#ItemGrid').height();
            var height = $('#OrderSelectGrid').height();
            $("#EditWindow").hide();
        });


        $('#agree').change(function () {
            if (this.checked) {
                $('#agree1').prop('checked', false);
                $('#SlOrder').disabled = false;
            } else {
                $('#SlOrder').disabled = true;
                $("#NewOrderWindow").hide();
            }
        });

        $('#agree1').change(function () {

            if (this.checked) {
                $('#agree').prop('checked', false);
                $('#SlOrder').disabled = false;
            } else {
                $('#SlOrder').disabled = true;
            }

        });





</script>
