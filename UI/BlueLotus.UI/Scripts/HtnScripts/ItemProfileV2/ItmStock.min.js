function LoadItmStockGrid() { setColumnProp([{ field: "ControlConKy", title: "ControlConKy", width: "100px", hidden: !0, attributes: { style: "text-align:center;" } }, { field: "ItmKy", title: "ItmKy", width: "100px", hidden: !0, attributes: { style: "text-align:center;" } }, { field: "LocNm", title: "Location", width: "100px", attributes: { style: "text-align:center;", class: "non-editable" }, filterable: { operators: { string: { contains: "Contains", startswith: "Starts with", eq: "Is equal to", neq: "Is not equal to" } } }, editor: function (e, t) { var a = t.model; $('<input id="LocNm" name="' + t.field + '"/>').appendTo(e).kendoComboBox({ dataSource: CdNm_SelectMob_Datasource("LocNm"), change: function (e) { combo = e.sender, selectedItm = combo.select(), dataItem = combo.dataItem(selectedItm); var t = $("#LocNm").data("kendoComboBox"), l = t.value(); isNaN(l) ? (alert("'" + l + "' is not a Valid input"), t.value(""), a.set("CdKy", 1), a.set("LocNm", "")) : (a.set("CdKy", dataItem.CdKy), a.set("LocNm", dataItem.CdNm)) }, dataValueField: "CdKy", dataTextField: "CdNm" }) } }, { field: "LocKy", title: "LocKy", width: "80px", hidden: !0 }, { field: "CurrentStock", title: "Current Stock", width: "100px", attributes: { style: "text-align:center;", class: "non-editable" }, template: '#= kendo.toString(CurrentStock, "n3")#' }, { field: "GrpStock", title: "Group Stock", width: "100px", attributes: { style: "text-align:center;", class: "non-editable" }, template: '#= kendo.toString(GrpStock, "n3")#' }, { field: "ReOrdLvl", title: "Reorder Level", width: "100px", attributes: { style: "text-align:center;", class: "non-editable" } }, { field: "ReOrdQty", title: "Reorder Qty", width: "100px", attributes: { style: "text-align:center;", class: "non-editable" }, template: '#= kendo.toString(ReOrdQty, "n3")#' }, { field: "PendingPO", title: "Pending PO Qty", width: "100px", attributes: { style: "text-align:center;", class: "non-editable" }, template: '#= kendo.toString(PendingPO, "n3")#' }], viewBag.ObjKy, "", "HdrSec2_Tab5_FormGrd", 4) } function LoadGridWithColumnPropFour(e, t) { if (4 == t) { var a = $("#ItmKy").val(), l = new kendo.data.DataSource({ transport: { read: { url: urlLoadItmStock, dataType: "json" }, parameterMap: function (e, t) { if ("read" == t) return { ItmKy: a, ObjKy: viewBag.ObjKy } } }, batch: !0, pageSize: 12, schema: { model: { fields: { ItmKy: { editable: !1, nullable: !1, type: "number" }, LocNm: { editable: !1, nullable: !1, type: "string" }, CurrentStock: { editable: !1, nullable: !1, type: "number" }, GrpStock: { editable: !1, nullable: !1, type: "number" }, ReOrdLvl: { editable: !1, nullable: !1, type: "number" }, LocKy: { editable: !1, nullable: !1, type: "number" }, ReOrdQty: { editable: !1, nullable: !1, type: "number" }, PendingPO: { editable: !1, nullable: !1, type: "number" }, ControlConKy: { editable: !1, nullable: !1, type: "number" } } } } }); $(".ItmStockgrid").kendoGrid({ dataSource: l, autobind: !0, resizable: !0, navigatable: !0, sortable: !0, reorderable: !0, columns: e, selectable: "row", pageable: { refresh: !0, pageSizes: [5, 10, 20, 50, 100, 150] }, filterable: !0, dataBinding: function () { record = (this.dataSource.page() - 1) * this.dataSource.pageSize() }, dataBound: GridOnDataBound, editable: !0 }) } }