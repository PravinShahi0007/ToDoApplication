@using CloudTODO.Models;
<script src='@Url.Content("~/Scripts/js/jquery.min.js")' type="text/javascript"></script>
<script src='@Url.Content("~/Scripts/js/kendo.all.min.js")' type="text/javascript"></script>
<script src='@Url.Content("~/Scripts/js/jquery-ui.js")' type="text/javascript"></script>
<div id="ResourceAnalysisWin" style="display: none">
    <div id="ItmNm">
        <input id="FinItm" type="text" style="width: 300px;" />
    </div>
    <div id="SelectionCritarea" style="margin-left: 40px;">
      <div id="cmbPrjKy"></div>
       <input placeholder="Task Id ..." id="code" type="text" style="width: 100px;" class="k-textbox" />
        <input placeholder="Task Name..." id="name" style="width: 200px;" type="text" class="k-textbox" />
       @* @Html.Partial("~/Views/HtnShared/ItmTypCombo.cshtml")*@
        @Html.Partial("~/Views/HtnShared/ItmCat1Combo.cshtml")
        @Html.Partial("~/Views/HtnShared/ItmCat2Combo.cshtml")
        @Html.Partial("~/Views/HtnShared/ItmCat3Combo.cshtml")
        <div style="margin-top: 10px;">
            <input style="width: 50px;" id="btnload" type="button" value="Load" class="k-button" />
           <input type="button" name="name" id="ItemCmpSave" value="Assign" class="k-button" onclick="ItemAssign()" />
            <input type="button" name="name" id="ItemCmpCancel" value="Cancel" class="k-button" onclick="ItemCmpCancel()" />
        </div>
    </div>
    <div id="Resource">
        @Html.Partial("~/Views/HtnShared/HtnResourceAllocationPartialView.cshtml");

    </div>

    <div id="GridWin">
        <div id="grid1" style="margin-top: 10px; height: 100px"></div>

    </div>


</div>


@*<div>    
@Html.Partial("~/Views/GanttChart/DailyProgressForWeb.cshtml")
</div>*@

<script type="text/javascript">
    $(document).ready(function () {
        //
        // LoadGridView();
        var h = $("#Option").height();
        var height = ($(window).height()) - (112 + h);
        $("#grid1").height(height);

        $("#ItmCmpnKy").hide();
        $("#FinItmKy").hide();
        $("#GridWin").show();
       
        $("#Win").show();
        // GetItmData();
     
        LoadGridView1();
        LoadPrjCombo();
        //$("#StartDate").width(140).kendoDatePicker({

        //    format: "dd/MM/yyyy",
        //    min: new Date(31, 2, 2009)
        //});
        //var todayDate = new Date();
        //$('#StartDate').data("kendoDatePicker").value(todayDate);

        //$("#StartDate").closest("span.k-datepicker").width(140);

        $("#Dt").width(150).kendoDatePicker({

            format: "dd/MM/yyyy",
            min: new Date(31, 2, 2009)
        });
        $("#Dt").closest("span.k-datepicker").width(140);

        $("#FinQty").kendoNumericTextBox({
            min: 0,
           
        });
    });

    function ItemCmpCancel() {

        $("#code").val("");
        $("#name").val("");
        $("#cmbPrjKy").data("kendoComboBox").value("");
        $("#cmbItmCat1Cd").data("kendoComboBox").value("");
        $("#cmbItmCat2Cd").data("kendoComboBox").value("");
        $("#cmbItmCat3Cd").data("kendoComboBox").value("");
        $('#grid1').data("kendoGrid").dataSource.filter(null);
        var grid = $("#grid1").data("kendoGrid");
        grid.dataSource.data([]);
        $('#ResourceAnalysisWin').data('kendoWindow').close();

    }

    function ItemAssign() {
       
            var parent = $("#grid1").data("kendoGrid");
            var child = $("#ItemGrid").data("kendoGrid");

            var selectedDataItem = parent.dataItem(parent.select());

            if (selectedDataItem) {
                child.dataSource.add({
                    PrcsDetKy: selectedDataItem.PrcsDetKy,
                    TaskId: selectedDataItem.PrcsID,
                    TaskNm: selectedDataItem.PrcsNm,
                    Unit: selectedDataItem.Unit,
                    UnitKy: selectedDataItem.UnitKy,
                    LiNo: selectedDataItem.Lino,

                });           // this is the way to saveChanges

                //child.dataSource.add(selectedDataItem);
            }
            else {
                alert("Selecte the Task ... !")
            }
            $('#ResourceAnalysisWin').data('kendoWindow').close();
        
        //var grid = $('#grid1').data().kendoGrid;
        //var selectedItem = grid.dataItem(grid.select());
        //var PrcsDetKy = selectedItem.PrcsDetKy;
        //if (PrcsDetKy != "" || PrcsDetKy != undefined || PrcsDetKy != null) {
        //    GetHdrDetail(PrcsDetKy);

        //} else {
        //    alert("please select any task..");
        //}


    }
    

    function PrjDatasource() {
        var dataSource = new kendo.data.DataSource(
          {
              transport: {
                  read: {
                      url: '@Url.Action("GetProjectListByPrntKy", "Home")',
                      data: { key: 1 },
                      dataType: "json"
                  }
              }

          });
          return dataSource;
      }

    function LoadPrjCombo() {

        $("#cmbPrjKy").kendoComboBox({
            dataValueField: "PrjKy",
            dataTextField: "DocNo",
            dataSource: PrjDatasource(),
           
            filter: "contains",
            suggest: true,
            placeholder: "Select a Prject.."
        });

        $("#cmbPrjKy").parent().css('width', "150px");
    }


    $("#code").keypress(function (event) {

        var keycode = (event.keyCode ? event.keyCode : event.which);
        if (keycode == '13') {
            var PrjKy = $("#cmbPrjKy").data("kendoComboBox").value();
            if (PrjKy != null && PrjKy != "") {
                $.ajax({
                    url: '@Url.Content("~/Home/GetTaskData")',
                    dataType: "json",
                    type: "POST",
                    data: {
                        'PrjKy': PrjKy,
                    },
                    success: function (list) {

                        var inputValue = $("#code").val();
                        if (inputValue != null && inputValue != undefined && inputValue != '') {
                            var foundItem = jQuery.grep(list, function (a) {
                                return a.TaskId == inputValue;

                            })
                            if (foundItem != null && foundItem != undefined) {
                                if (foundItem.length == 0) {
                                    alert("Cannot find the item !");
                                    $("#code").val(null);
                                    $("#code").focus();
                                } else {
                                    var taskNm = foundItem[0].TaskNm;
                                    $("#name").val(taskNm);

                                }
                            }
                        } else {
                            alert("Please insert an Task Id !")
                        }

                    },
                    error: function (e) {

                    }

                });

            } else {

                alert("Please Select projec..");
            }
        }
    });
    function AssignResrcChild() {
    //    $("#Grid2Win").show();

        //var todayDate = new Date();
        //$('#StartDate').data("kendoDatePicker").value(todayDate);
        try {
            var parent = $("#grid1").data("kendoGrid");
            var child = $("#grid2").data("kendoGrid");

            var selectedDataItem = parent.dataItem(parent.select());

            if (selectedDataItem) {
                child.dataSource.add({
                    ItmKy: selectedDataItem.ItmKy,
                    ResCd: selectedDataItem.ResCd,
                    ResNm: selectedDataItem.ResNm,
                    Unit: selectedDataItem.Unit,
                    UnitKy: selectedDataItem.UnitKy

                });           // this is the way to saveChanges

                //child.dataSource.add(selectedDataItem);
            }
            else {
                alert("Selecte the Resource ... !")
            }
        } catch (exception) {
            alert("Select Resource Detail Level ... 1")
        }
    }
 

  
        function LoadGridView1() {
            //var PrjKy = $("#cmbPrjKy").data("kendoComboBox").value();

            //if (PrjKy == null && PrjKy == undefined && PrjKy == "") {
            //    var PrjKy = 1;
            //}

            var gridTaskdataSource = new kendo.data.DataSource({
                transport: {
                    read: {
                  @*  url: '@Url.Action("PrjTask_SearchWeb", "GanttChart")',*@
                    dataType: "json",

                },
                parameterMap: function (options, operation) {
                    if (operation == "create" && options.models) {
                        return JSON.stringify({ 'list': options.models }); // Parrameter name of the Controller Action method==> List<ToDoModel>emp
                    }
                    if (operation == "update" && options.models) {
                        return JSON.stringify({ 'list': options.models }); // Parrameter name of the Controller Action method==> List<ToDoModel>emp
                    }
                    if (operation == "destroy" && options.models) {
                        return JSON.stringify({ 'list': options.models }); // Parrameter name of the Controller Action method==> List<ToDoModel>emp
                    }
                    if (operation == "read") {
                        return ({
                            //'prjKy': PrjKy,
                            //'ItmCd': ($("#code").val()) ? $("#code").val() : 1,
                            //'ItmNm': ($("#name").val()) ? $("#name").val() : 1,
                           
                            //ItmCat1Ky: ($("#cmbItmCat1Cd").data("kendoComboBox").value()) ? $("#cmbItmCat1Cd").data("kendoComboBox").value() : 1,
                            //ItmCat2Ky: ($("#cmbItmCat2Cd").data("kendoComboBox").value()) ? $("#cmbItmCat2Cd").data("kendoComboBox").value() : 1,
                            //ItmCat3Ky: ($("#cmbItmCat3Cd").data("kendoComboBox").value()) ? $("#cmbItmCat3Cd").data("kendoComboBox").value() : 1,

                        });
                    }
                }
            },
            batch: true,
            pageSize: 5,

            schema: {
                model: {
                    id: "PrcsDetKy",
                    fields: //Relavent fields of the grid should be bind with following model items
                    {
                        PrcsDetKy: { editable: false, nullable: false, validation: { required: true }, type: "number" },
                        Lino: { editable: false, nullable: false, validation: { required: true }, type: "number" },
                        PrcsID: { editable: true, nullable: false, validation: { required: true }, validation: { required: true }, type: "string" },
                        PrcsNm: { editable: true, nullable: true, type: "string" },
                        Unit: { editable: true, nullable: true },
                        UnitKy: { editable: true, nullable: true, type: "number" },
                     


                    }
                }
            }
        });

        $("#grid1").kendoGrid({
            dataSource: gridTaskdataSource,
            autobind: true,
            height: 300,
            navigatable: true,

            selectable: "row",
            pageable: { refresh: true, pageSizes: [5, 10, 20, 50, 100] },

            columnMenu: true,
            filterable: true,
            columns: [
                      { field: "PrcsDetKy", title: "Ref #", width: "30px", hidden: true },
                      { field: "Lino", title: "LiNo", width: "30px"},
                      { field: "PrcsID", title: "TaskId", width: "30px" },
                      { field: "PrcsNm", title: "TaskNm", width: "30px" },
                      { field: "Unit", width: "30px" },
                      { field: "UnitKy", width: "30px", hidden: true },
                 
            ],

            resizable: true,

            dataBinding: function () {
                record = (this.dataSource.page() - 1) * this.dataSource.pageSize();
            },
            dataBound: GridOnDataBound,
            editable: true
        });
     
    }

    function GridOnDataBound(arg) {
    }

    function GridOnDataBinding(arg) {
        record = (this.dataSource.page() - 1) * this.dataSource.pageSize();
    }

    function GridOnChange(arg) {
    }
    //function LoadCombo() {
    //    $("#Loc").kendoComboBox({
    //        dataValueField: "AdrKy",
    //        dataTextField: "AdrNm",
    //        dataSource: PersonDataSource(),

    //        filter: "contains",
    //        suggest: true,
    //        placeholder: "Select a name..",


    //    });
    //    $("#Loc").parent().css('width', "200px");
    //}

    $("#btnload").click(function () {
        
        $("#ResourceAnalysisWin").show().kendoWindow({

            width: "1000px",
            height: "500px",
            modal: true,
            title: "Find",
            //close: onClose1


        });
        // data("kendoWindow").destroy()
        $('#ResourceAnalysisWin').data('kendoWindow').center().open();
        $('#ResourceAnalysisWin').data('kendoWindow').refresh();
        LoadAdrGridForResAloc();
        LoadGridForResAloc();
        //LoadGriddata();
      
    });

    function LoadGriddata() {
        
        $('#grid1').data("kendoGrid").dataSource.filter(null);
        var grid = $("#grid1").data("kendoGrid");
        grid.dataSource.data([]);
        $.ajax({
            url:'@Url.Action("PrjTask_SearchWeb", "GanttChart")',
            data: JSON.stringify( {

                prjKy:($("#cmbPrjKy").data("kendoComboBox").value()) ? $("#cmbPrjKy").data("kendoComboBox").value() : 1,
                ItmCd: ($("#code").val()) ? $("#code").val() : 1,
                ItmNm: ($("#name").val()) ? $("#name").val() : 1,

                ItmCat1Ky: ($("#cmbItmCat1Cd").data("kendoComboBox").value()) ? $("#cmbItmCat1Cd").data("kendoComboBox").value() : 1,
                ItmCat2Ky: ($("#cmbItmCat2Cd").data("kendoComboBox").value()) ? $("#cmbItmCat2Cd").data("kendoComboBox").value() : 1,
                ItmCat3Ky: ($("#cmbItmCat3Cd").data("kendoComboBox").value()) ? $("#cmbItmCat3Cd").data("kendoComboBox").value() : 1,
            }),
            contentType: 'application/json; charset=utf-8',
            dataType: "Json",
            type: "POST",
            success: function (data) {
              
                for (i = 0; i < data.length; i++) {
                    $("#grid1").data("kendoGrid").dataSource.add({
                        PrcsDetKy: data[i].PrcsDetKy,
                        Lino: data[i].Lino,
                        PrcsID: data[i].PrcsID,
                        PrcsNm: data[i].PrcsNm,
                        Unit: data[i].Unit,
                        UnitKy: data[i].UnitKy,
                      
                    });


                }


            },
            error: function (e) {
                return false;
            }
        });
    }



</script>
