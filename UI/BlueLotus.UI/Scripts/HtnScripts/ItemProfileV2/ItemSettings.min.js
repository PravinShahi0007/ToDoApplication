function LoadItmSettingsGrid() { setColumnProp([{ field: "ItmCdKy", title: "ItmCdKy", width: "100px", hidden: !0, attributes: { style: "text-align:center;" } }, { field: "ControlConKy", title: "ControlConKy", width: "100px", hidden: !0, attributes: { style: "text-align:center;" } }, { field: "ItmKy", title: "ItmKy", width: "100px", hidden: !0, attributes: { style: "text-align:center;" } }, { field: "LocNm", title: "Location", width: "100px", attributes: { style: "text-align:center;" }, filterable: { operators: { string: { contains: "Contains", startswith: "Starts with", eq: "Is equal to", neq: "Is not equal to" } } }, editor: function (e, t) { var i = t.model; $('<input id="LocNm" name="' + t.field + '"/>').appendTo(e).kendoComboBox({ dataSource: CdNm_SelectMob_Datasource("LocNm"), change: function (e) { combo = e.sender, selectedItm = combo.select(), dataItem = combo.dataItem(selectedItm); var t = $("#LocNm").data("kendoComboBox"), l = t.value(); isNaN(l) ? (alert("'" + l + "' is not a Valid input"), t.value(""), i.set("CdKy", 1), i.set("LocNm", "")) : (i.set("CdKy", dataItem.CdKy), i.set("LocNm", dataItem.CdNm)) }, dataValueField: "CdKy", dataTextField: "CdNm" }) } }, { field: "SupNm", title: "Supplier", width: "100px", attributes: { style: "text-align:center;" }, filterable: { operators: { string: { contains: "Contains", startswith: "Starts with", eq: "Is equal to", neq: "Is not equal to" } } }, editor: function (e, t) { var i = t.model; $('<input id="SupNm" name="' + t.field + '"/>').appendTo(e).kendoComboBox({ dataSource: AdrNm_SelectMob_DataSource("SupNm"), change: function (e) { combo = e.sender, selectedItm = combo.select(), dataItem = combo.dataItem(selectedItm); var t = $("#SupNm").data("kendoComboBox"), l = t.value(); isNaN(l) ? (alert("'" + l + "' is not a Valid input"), t.value(""), i.set("DefaultSupAdrKy", 1), i.set("SupNm", "")) : (i.set("DefaultSupAdrKy", dataItem.AdrKy), i.set("SupNm", dataItem.AdrNm)) }, dataValueField: "AdrKy", dataTextField: "AdrNm" }) } }, { field: "DefaultSupAdrKy", title: "DefaultSupAdrKy", width: "100px", hidden: !0, attributes: { style: "text-align:center;" } }, { field: "OfrCode", title: "Promotion Code", width: "100px", attributes: { style: "text-align:center;" } }, { field: "OrdUnit", title: "Order Unit", width: "100px", attributes: { style: "text-align:center;", class: "non-editable" } }, { field: "SalesUnit", title: "Sales Unit", width: "100px", attributes: { style: "text-align:center;", class: "non-editable" } }, { field: "InventoryUnit", title: "Inventory Unit", width: "100px", attributes: { style: "text-align:center;" }, hidden: !0 }, { field: "CosPri", title: "Cost Price", width: "100px", attributes: { style: "text-align:center;", class: "non-editable" }, template: '#= kendo.toString(CosPri, "n2")#' }, { field: "SlsPri", title: "Sales Price", width: "100px", attributes: { style: "text-align:center;", class: "non-editable" }, template: '#= kendo.toString(SlsPri, "n2")#' }, { field: "ReOrdLvl", title: "Reorder Level", width: "100px", attributes: { style: "text-align:center;" } }, { field: "ReOrdQty", title: "Reorder Qty%", width: "100px", attributes: { style: "text-align:center;" }, template: '#= kendo.toString(ReOrdQty, "n3")#' }, { title: "Discontinue", width: "100px", template: '<label class="lbl-switch"> <input type="checkbox"  #= isDiscontinued? "checked=checked" : "" # class="isDiscontinuedPinChecked"/> <div> <span class="on">Yes</span> <span class="off">No</span> </div> <i></i> </label>' }, { title: "Shown in Website", width: "100px", template: '<label class="lbl-switch"> <input type="checkbox"  #= isShowInWeb? "checked=checked" : "" # class="isShowInWebPinChecked"/> <div> <span class="on">Yes</span> <span class="off">No</span> </div> <i></i> </label>' }, { title: "Fixed Sales Price", width: "100px", template: '<label class="lbl-switch"> <input type="checkbox"  #= isFixedSlsPrice? "checked=checked" : "" # class="isFixedSlsPricePinChecked"/> <div> <span class="on">Yes</span> <span class="off">No</span> </div> <i></i> </label>' }, { field: "MinInvQty", title: "MinQty", width: "100px", attributes: { style: "text-align:center;" }, hidden: !0 }, { field: "MaxInvQty", title: "MaxQty", width: "100px", attributes: { style: "text-align:center;" }, hidden: !0 }, { field: "MaxDisPer", title: "Max Discount %", width: "100px", attributes: { style: "text-align:center;" } }, { field: "MinSlsPri", title: "Min Sales Price", width: "100px", attributes: { style: "text-align:center;" }, template: '#= kendo.toString(MinSlsPri, "n2")#' }], viewBag.ObjKy, "", "HdrSec2_Tab3_FormGrd", 2) } function LoadGridWithColumnPropTwo(e, t) { if (2 == t) { try { $("#ItmSettingsgrid").data().kendoGrid.destroy(), $("#ItmSettingsgrid").empty() } catch (e) { } var i = $("#HdrSec1_CmbTyp_Cd").data("kendoComboBox").value(), l = $("#ItmKy").val(), a = new kendo.data.DataSource({ transport: { read: { url: urlGetItmSettings, contentType: "application/json; charset=utf-8", dataType: "json" }, parameterMap: function (e, t) { if ("read" == t) return { ItmTypKy: i, ControlConKy: ControlConKy, ItmKy: l, ObjKy: viewBag.ObjKy } } }, pageSize: 12, schema: { model: { id: "ItmCdKy", fields: { ItmKy: { editable: !0, nullable: !1, validation: { required: !0 }, type: "number" }, ControlConKy: { editable: !1, nullable: !1, type: "number" }, ItmCdKy: { editable: !1, nullable: !1, type: "number" }, CdKy: { editable: !0, nullable: !0 }, DefaultSupAdrKy: { editable: !1, nullable: !1, type: "number" }, LocNm: { editable: !0, nullable: !0, type: "string" }, SupNm: { editable: !0, nullable: !0, type: "string" }, OfrCode: { editable: !0, nullable: !0, type: "string" }, OrdUnit: { editable: !1, nullable: !0 }, SalesUnit: { editable: !1, nullable: !0 }, InventoryUnit: { editable: !1, nullable: !0 }, ReOrdLvl: { editable: !0, nullable: !0, type: "number" }, ReOrdQty: { editable: !0, nullable: !0, type: "number" }, isShowInWeb: { editable: !0, nullable: !1, type: "boolean" }, isDiscontinued: { editable: !0, nullable: !1, type: "boolean" }, isAlwTrnRateChange: { editable: !0, nullable: !1, type: "boolean" }, isFixedSlsPrice: { editable: !0, nullable: !1, type: "boolean" }, MinInvQty: { editable: !0, nullable: !1, type: "number" }, MaxInvQty: { editable: !0, nullable: !1, type: "number" }, CosPri: { editable: !1, nullable: !1, type: "number" }, SlsPri: { editable: !1, nullable: !1, type: "number" }, MaxDisPer: { editable: !0, nullable: !1 }, MinSlsPri: { editable: !0, nullable: !1 } } } } }); $(".ItmSettingsgrid").kendoGrid({ dataSource: a, autobind: !0, resizable: !0, navigatable: !0, sortable: !0, reorderable: !0, columns: e, selectable: "row", pageable: { refresh: !0, pageSizes: [5, 10, 20, 50, 100, 150] }, columnMenu: !0, filterable: { mode: "row" }, dataBinding: function () { record = (this.dataSource.page() - 1) * this.dataSource.pageSize() }, dataBound: GridOnDataBound, editable: !0 }) } } function GridOnDataBound(e) { var t = $("#Itemgrid").data("kendoGrid"); $(t.tbody).on("click", "td", function (e) { var i = $(this).closest("tr"); $("tr", t.tbody).index(i); if (6 == $("td", i).index(this)) { $("#MultiUnitWin").show().kendoWindow({ width: "1000px", height: "500px", modal: !0, title: "Find" }); var l = t.dataItem(t.select()), a = l.ItmKy, n = l.UnitKy; $("#MultiItmKy").val(a), $("#MultiUnitKy").val(n) } }) } function GridOnDataBinding(e) { record = (this.dataSource.page() - 1) * this.dataSource.pageSize() } $("#ItmSettingsgrid").on("click", ".isShowInWebPinChecked", function () { var e = $(this).is(":checked"), t = $("#ItmSettingsgrid").data().kendoGrid.dataItem($(this).closest("tr")); null != t && t.set("isShowInWeb ", e) }), $("#ItmSettingsgrid").on("click", ".isDiscontinuedPinChecked", function () { var e = $(this).is(":checked"), t = $("#ItmSettingsgrid").data().kendoGrid.dataItem($(this).closest("tr")); null != t && t.set("isDiscontinued ", e) }), $("#ItmSettingsgrid").on("click", ".isFixedSlsPricePinChecked", function () { var e = $(this).is(":checked"), t = $("#ItmSettingsgrid").data().kendoGrid.dataItem($(this).closest("tr")); null != t && t.set("isFixedSlsPrice ", e) });