@{
    ViewBag.Title = "DailyProgress";
    Layout = "~/Views/Shared/_GanttLayout.cshtml";
}

@*<hgroup class="title">
    <h1>Order Now</h1>

</hgroup>
*@

<div id="supervicer" style="/*background-color: #DCDCDC; */ padding-left: 200px; padding-top: 58px; margin-top: 10px; margin-left: 160px;">
    <div id="addChng" style="background-color: #FFFFFF; border: 2px solid #A9A9A9; margin-top: -50px; width:600px;">
        <div id="Hdr" style="margin-top: -2px; background-color:  #E3F0F7; margin-left: -1px; border: 2px solid #A9A9A9; padding: 5px;">
          Task Quality Assurance
        </div>
        <div id="findHdr" style="width: 400px;margin-left:120px;">
           
            
                <div style="width:100px; margin-top:5px;">
                   <div style="width:100px;">
                    <label>Date </label>
                    </div>
                 <div style="margin-left:180px; margin-top:-15px;">
                  <input id="dateFrom" 
                      class=""
                      data-role="datepicker"
                      data-bind="value: Date" />
                     </div>
                       </div>
             <div style=" margin-top:5px;">
                 <label>Project Name</label>
                   
                   <div style="margin-left:180px;margin-top:-10px;">
                  <select id="dlivNo"
                      class=""
                      data-role="combobox"
                      data-placeholder="Select project name...."
                      data-text-field="DocNo"
                      data-value-field="PrjKy"
                      data-bind="source:ProjectNamesDataSource, value : ProjectName">
                  </select>
                       </div>

                    <div  style=" margin-top:5px;">
                        <label>Task Id</label>
                <div style="margin-left:180px;margin-top:-10px;">
                    <select id="Item"
                        data-role="combobox"
                        data-text-field="TaskId"
                        data-value-field="PrcsDetKy"
                        data-bind="source:ItemDataSource,  value : TaskName">
                    </select>
                </div>

            </div>
                 <div style=" margin-top:10px;margin-left:30px;">
                 @* <button type="button" class="k-button" id="Search"  data-bind="click: SearchrBtnClick">Search</button>*@
                      <button class="k-button" id="btnAddItem" data-bind="click: OrderAddClick" style="width: 90px; height: 25px">Load</button>
                  <button class="k-button" id="btnSave" data-bind="click: NewOrderSaveClick" style="width: 90px; height: 25px">Save</button>
                  <button class="k-button" id="btnCancel" data-bind="click: NewOrderCancelClick" style="width: 90px; height: 25px">Cancel</button>
                </div>
               @* <div style="margin-left:180px; margin-top:-5px;">
                  <button type="button" class="k-button" id="DlyPgsSearch" style="margin-top:10px;" data-bind="click: SelectOrderBtnClick">Daily Progress Search</button>
                </div>*@
            </div>
             
        </div>
        <div id="SearchWindow"
            style="border: 2px solid #A9A9A9; margin-top: 10px; margin-left: 10px; margin-right: 10px; margin-bottom: 10px; border-radius: 5px;">
         
           @*<div id="QAGrid">

           </div>*@
            <div id="grid">

           </div>
          
        </div>
           
    </div>

</div>
<script id="command-template" type="text/x-kendo-template">
        <a class="k-button k-grid-evenselect">Select</a>
</script>

<script>

    var gridAddItems;

    function AddDataItems() { aleart("Hi") }
    var Item = kendo.data.Model.define({
        fields: {
            "CheckList": {
                type: "string",
                editable: true
            },
            "Grade": {
                type: "string",
                editable: true
            },
            "Description": {
                type: "string",
                editable: true
            }

        }
    });

    var ItemGridData = new kendo.data.DataSource({
        data: [
        ],
        serverPaging: true,
        schema: {
            model: Item
        },
        pageSize: 10
    });

    var ProjectNamesData = new kendo.data.DataSource({
        transport: {
            read: {
                url: '@Url.Action("GetProjectListByPrntKy", "Home")',
                data: { key: 1 },
                dataType: "json"
            }
        }
    });


    var ItemData = new kendo.data.DataSource({
        transport: {
            read: {
                url: '@Url.Action("GetTaskData", "Home")',
                dataType: "json"
            }
        }
    });

    var PreviuosWOData = new kendo.data.DataSource({
        data: [],
        schema: {
            model: kendo.data.Model.define({
                fields: {
                    "OrdKy": {
                        type: "number",
                        editable: false
                    },
                    "OrdNo": {
                        type: "number",
                        editable: false
                    }
                }
            })
        },
        pageSize: 10
    });

    var OrdDataSource = new kendo.data.DataSource({
        data: [],
        schema: {
            model: kendo.data.Model.define({
                fields: {
                    "TaskId": {
                        type: "string",
                        editable: false
                    },
                    "TaskName": {
                        type: "string",
                        editable: false
                    },
                    "Qty": {
                        type: "number",
                        editable: true
                    },
                    "FinPer": {
                        type: "number",
                        editable: true
                    }
                }
            })
        },
        pageSize: 10
    });

    var viewModel = kendo.observable({
        Date: null,

        ProjectName: null,


        SearchWindow: false,

        ProjectNamesDataSource: ProjectNamesData,
        ItemDataSource: ItemData,
        //DeliveryNamesDataSource: DeliveryNamesData,
        //OrderDayDataSource: OrderDayData,
        ItemGridDataSource: ItemGridData,


       // SearchrBtnClick: searchrBtnClickEvent,
        //SelectOrderBtnClick: SelectOrderClickEvent,
        //SearchrPrgsBtnClick:SearchrPrgsBtnClickevent,
       // NewOrderSaveClick: NewOrderSaveClickEvent,
       // OrderAddClick: OrderAddClickEvent,
      //  NewOrderCancelClick: NewOrderCancelClickEvent,
        //ItemGridSelectDataSource: PreviuosWOData,
        //onChange: onChangeEvent,
    });

    var SelectOrderModel = kendo.observable({
        DlyPrgsSelectWindow: false,
        ItemGridSelectDataSource: PreviuosWOData,
        //OrdGridSelectDataSource:OrdDataSource,
        ItemSelectDataSource: null
        //selectedRow: null
    });

    var SelectPreviousViewModal = kendo.observable({
        DlyPrgsSelectWindow: false,
        PreviosWOData: []

    })
    function LoadGrid() {
      @*  var ProjectCostSchVarienceDly_DB_Data = new kendo.data.DataSource({
            transport: {
                read: {
                    url: '@Url.Action("GetProjectCostSchVarienceDly_DB_Data", "DashBoardPM")',
                        dataType: "json"
                    }
                }
           });*@
        
        var ProjectCostSchVarienceDly_DB_Data = [
                           { CheckList: "Check Leveling", Grade: "A", Description:"" },
                           { CheckList: "Finish Quality", Grade: "R", Description: "" },
                           { CheckList: "Stress test", Grade: "A", Description: "" },
                           { CheckList: "Sternght", Grade: "R", Description: "" }

        ];

        var data = [{ CdKy: "103047", Code: "A"  },
        { CdKy: "103048", Code: "R" }];

   @* $("#QAGrid").kendoGrid({
        dataSource: ProjectCostSchVarienceDly_DB_Data,
        autobind: true,
        editable:true,
        navigatable: true,
        filterable: true,
        groupable: true,
        pageable: true,
        sortable: true,
        reorderable: true,
        columnMenu: true,

        selectable: "row",
        pageable: { refresh: true, pageSizes: [5, 10, 20, 50, 100] },
        toolbar: [{ name: "create", text: "Add new record" }, "save", "cancel"],

        columns: [{ field: "CheckList", title: "Check List", width: "100px" },
                  {
                      field: "Grade",
                      title: "Grade",
                      width: "100px",
                      editor: function (container, options) {
                                var model = options.model;
                                $('<input id="cmbGrade" name="' + options.field + '"/>').appendTo(container).kendoComboBox({
                                    dataSource: {
                                        type: "POST",
                                        transport: {
                                            read: '@Url.Content("~/GanttChart/GetAllCodes")',
                                            data: {ConCd : PrjQAChklist}
                                    }
                                },
                               
                                //when the user gonna add a new record, combo should automatically bind the values from the Filter
                                dataValueField: "Code",
                                dataTextField: "CdKy"
                            });
                        }
                        },
                        { field: "Description", title: "Description", width: "100px" }
                      ],
        
        //columns:
        //[
        //    { field: "PrcsDetKy", title: "Ref#", width: "70px" },
        //     { field: "PrjKy", title: "Project Key", width: "100px", hidden: 'true' },


        //],
        resizable: true,
    }).data("kendoGrid");*@
       @* var dataSource = new kendo.data.DataSource({
            transport: {
                read: {
                    url: '@Url.Action("GetAllToDo","Home")',
                    dataType: "json"
                },
                batch: true,
                pageSize: 10,
                schema: {
                    model: {
                        fields: //Relavent fields of the grid should be bind with following model items
                        {
                            PrjNm: { editable: true, nullable: false, validation: { required: true } },

                        }
                    }
                }
            }
             
         });*@

        $("#grid").kendoGrid({
            dataSource: ProjectCostSchVarienceDly_DB_Data,
            autobind: true,

            navigatable: true,
            filterable: true,
            groupable: true,
            pageable: true,
            sortable: true,
            reorderable: true,
            columnMenu: true,

            selectable: "row",
            pageable: { refresh: true, pageSizes: [5, 10, 20, 50, 100] },
            toolbar: [{ name: "create", text: "Add new record" }, "save", "cancel"],

            columns: [
                    { field: "CheckList", title: "CheckList", width: "70px" },
                    {
                        field: "Grade",
                        title: "Grade",
                        width: "40px",
                        editor: function (container, options) {
                            var model = options.model;
                            $('<input id="cmbPrjNmGrd" name="' + options.field + '"/>').appendTo(container).kendoComboBox({
                                dataSource:data,
                                change: function (e) {

                                    combo = e.sender;
                                    selectedItm = combo.select();
                                    dataItem = combo.dataItem(selectedItm);

                                    var validate = ComboValidations("cmbPrjNmGrd");
                                    if (validate) {
                                        model.set("PrjKy", dataItem.PrjKy);
                                        model.set("PrjNm", dataItem.PrjNm);
                                    } else {
                                        model.set("PrjKy", 1);
                                        model.set("PrjNm", "");
                                    }


                                },
                                //when the user gonna add a new record, combo should automatically bind the values from the Filter
                             
                                dataValueField: "CdKy",
                                dataTextField: "Code"
                            });
                        }
                    },
                { field: "Description", title: "Description", width: "170px" },

                
            ],

            resizable: true,

            dataBinding: function () {
                record = (this.dataSource.page() - 1) * this.dataSource.pageSize();
            },
          
            editable: true
        });
    }
    function NewOrderCancelClickEvent(e) {
        $("#Itmcode").val(null);
        $("#ItemAmount").val(null);
        $("#PerAmount").val(null);
        $("#ItemAmount").kendoNumericTextBox({
            min: 1
        });
        $("#PerAmount").kendoNumericTextBox({
            min: 1
        });
        viewModel.set("Date", null);
        viewModel.set("ProjectName", null);
        viewModel.set("ProjectId", null);
        $("#ItemGrid").data("kendoGrid").dataSource.filter(null);


    }

    function searchrBtnClickEvent(e) {
        //$("#DlyPrgsSelectWindow").data("kendoWindow").close();
        $("#SearchWindow").slideToggle("slow", null);
        gridAddItems = $("#ItemGrid").data("kendoGrid");
        $("#Itmcode").val(null);
        $("#ItemAmount").val(null);
        $("#PerAmount").val(null);
        $("#ItemAmount").kendoNumericTextBox({
            min: 1
        });
        $("#PerAmount").kendoNumericTextBox({
            min: 1
        });


    }





    function OrderAddClickEvent() {

        var inputValue = $("#Itmcode").val();
        if (inputValue != null && inputValue != undefined && inputValue != '') {
            var foundItem = jQuery.grep(viewModel.ItemDataSource.data(), function (a) {
                return a.TaskId == inputValue;
            })
            if (foundItem != null && foundItem != undefined) {
                if (foundItem.length == 0) {
                    alert("Cannot find the item !");
                    $("#Itmcode").val(null);
                    $("#ItemAmount").val(null);
                    $("#PerAmount").val(null);
                    $("#Itmcode").focus();
                } else {
                    var amount = $("#ItemAmount").val();
                    var inputValue1 = $("#PerAmount").val();
                    if (amount != null && amount != undefined && amount != '') {
                        var addedItems = $("#ItemGrid").data("kendoGrid")._data
                        if (addedItems.length > 0) {
                            var foundInAddedItems = jQuery.grep(addedItems, function (a) {
                                return a.TaskId == inputValue;
                            })
                            if (foundInAddedItems.length > 0) {
                                alert("Item already added !")
                                $("#Itmcode").val(null);
                                $("#ItemAmount").val(null);
                                $("#PerAmount").val(null);
                                $("#Itmcode").focus();
                            } else {
                                $("#ItemGrid").data("kendoGrid").dataSource.add({ TaskId: foundItem[0].TaskId, PrcsDetKy: foundItem[0].PrcsDetKy, Qty: amount })
                                $("#Itmcode").val(null);
                                $("#ItemAmount").val(null);
                                $("#PerAmount").val(null);
                                $("#Itmcode").focus();
                            }
                        } else {
                            $("#ItemGrid").data("kendoGrid").dataSource.add({ TaskId: foundItem[0].TaskId, PrcsDetKy: foundItem[0].PrcsDetKy, Qty: amount })
                            $("#Itmcode").val(null);
                            $("#ItemAmount").val(null);
                            $("#PerAmount").val(null);
                            $("#Itmcode").focus();
                        }
                    } else {
                        alert("Please insert an Qty !")
                    }
                }
            }
        } else {
            alert("Please insert an Task Id!")

        }

    }
    function ClearAddNewFormData() {
        $("#dateFrom").val(null);
        $("#Address").val(null);
        $("#DeliveryNo").val(null);
        $("#OrderDay").val(null);

        viewModel.set("OrderDate", null);
        viewModel.set("AddressName", null);
        viewModel.set("DeliveryNo", null);
        viewModel.set("OrderDay", null);
    }







    $("#dateFrom").width(182).kendoDatePicker({

        format: "yyyy/MM/dd",
        min: new Date(2009, 2, 31)
    });

    $("#dateFrom").closest("span.k-datepicker").width(140);

    $("#OrderSelectGrid").on("click", ".k-grid-evenselect", function () {
        var grid = $("#OrderSelectGrid").data("kendoGrid");
        var selectedIndex = grid.select();
        if (selectedIndex != null && selectedIndex != undefined) {
            var dataItem = grid.dataItem(selectedIndex)
            if (dataItem != null && dataItem != undefined) {
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    url: '@Url.Action("GetOrderDetails", "Order")',
                    data: {
                        strOrdKy: dataItem.OrdKy
                    },
                    success: function (data) {
                        $("#NewOrderWindow").slideToggle("slow", null);
                        for (var i = 0; i < data.length; i++) {
                            $("#ItemGrid").data("kendoGrid").dataSource.add({ ItmKy: data[0].ItmKy, ItmCd: data[0].ItmCd, ItmNm: data[0].ItmNm, unit: data[0].unit, Qty: data[0].Qty })
                        }
                        $("#OrderSelectWindow").data("kendoWindow").close();
                    }
                })
            }
            else {
                alert("Cannot find any matching Orders !");
            }
        }
    });

    kendo.bind($('#EditWindow'), SelectOrderModel);
    kendo.bind($("#addChng"), viewModel);

    $(document).ready(function () {
        //$("#DlyPrgsSelectWindow").data("kendoWindow").hide();
        LoadGrid()
        $("#SearchWindow").show();
        gridAddItems = $("#ItemGrid").data("kendoGrid");
        $("#Itmcode").val(null);
        $("#ItemAmount").val(null);
        $("#PerAmount").val(null);
        $("#ItemAmount").kendoNumericTextBox({
            min: 1
        });
        $("#PerAmount").kendoNumericTextBox({
            min: 1
        });
       
        $("#EditWindow").hide();

        var height = $(window).height() - 130;
        $("#body").height(height);
    });








</script>
