@{
    ViewBag.Title = "Item Entry/Task";
    Layout = "~/Views/Shared/_GanttLayout.cshtml";
     <link href='@Url.Content("~/Content/jquery-ui.css")' rel="stylesheet" type="text/css" />
}
    
<script src='@Url.Content("~/Scripts/js/jquery.min.js")' type="text/javascript"></script>
<script src='@Url.Content("~/Scripts/js/kendo.all.min.js")' type="text/javascript"></script>
<script src='@Url.Content("~/Scripts/js/jquery-ui.js")' type="text/javascript"></script>
  
<div id="grid"></div>
<div>    
@Html.Partial("~/Views/ItmMas/AnalysisGrid.cshtml")
 @*   @Html.Partial("~/Views/PMResource/PMResource.cshtml")*@
</div>
    
<script type="text/javascript">
    $(document).ready(function () {

        GetItmTypKy();
        var h = $("#option").height();
        var height = ($(window).height()) - (112 + h);
        $("#grid").height(height);
    });

    function GetItmTypKy() {
        $.ajax({
            url: '@Url.Action("GetItmTypKy", "ItmMas")',
            data: { ConCd: "ItmTyp", OurCd: "RM" },
            dataType: "Json",
            type: "POST",
            success: function (data) {
                for (i = 0; i < data.length; i++) {
                    var ItmTypKy = data[0].CdKy;
                    LoadGridView(ItmTypKy);
                }
            }
        });
    }

    function createFilterRow() {
        var grid = $('#grid').data('kendoGrid');

        var oldRow = grid.thead.find("#grid-filter-row");
        var th;

        if (typeof oldRow === 'object') {
            th = oldRow.find('th');
            oldRow.remove();
        }

        var filterRow = "<tr id='grid-filter-row'>";

        for (var i = 0; i < grid.dataSource.group().length; i++) {
            filterRow += '<th class="k-group-cell k-header">&nbsp;</th>';
        }
        for (var i = 0; i < th.length; i++) {
            filterRow += th[i].outerHTML;
        }
        for (var i = 0; i < grid.columns.length; i++) {
            if (!grid.columns[i].hidden)
                filterRow += '<td><input type=\'search\' id=\'gridId-filter-column-' + grid.columns[i].field + '\' style=\'width:98%\' /></td>';
        }
        filterRow += '</tr>';
        grid.thead.append(filterRow);

        var searchField;
        for (i = 0; i < grid.columns.length; i++) {
            if (!grid.columns[i].hidden) {
                searchField = $('#gridId-filter-column-' + grid.columns[i].field);
                searchField.change({ index: i }, function (e) {
                    var grid = $('#grid').data('kendoGrid');
                    updateSearchFilters(grid, grid.columns[e.data.index].field, 'contains', this.value);
                });
            }
        }
    }

    function updateSearchFilters(grid, field, operator, value) {
        var newFilter = { field: field, operator: operator, value: value };
        var dataSource = grid.dataSource;
        var filters = null;
        if (dataSource.filter() != null) {
            filters = dataSource.filter().filters;
        }
        if (filters == null) {
            filters = [newFilter];
        }
        else {
            var isNew = true;
            var index = 0;
            for (index = 0; index < filters.length; index++) {
                if (filters[index].field == field) {
                    isNew = false;
                    break;
                }
            }
            if (isNew) {
                filters.push(newFilter);
            }
            else {
                //alert(value);
                if (value == '')
                    filters.splice(index, 1);
                    //delete filters[index];
                else
                    filters[index] = newFilter;
            }
        }
        dataSource.filter(filters);
    }





    function LoadGridView(ItmTypKy) {

        var griddataSource = new kendo.data.DataSource({
            transport: {
                read: {
                    url: '@Url.Action("GetAllItems","ItmMas")',
                    dataType: "json",

                },
                update: {
                    url: '@Url.Action("Update","ItmMas")',
                    contentType: 'application/json; charset=utf-8',
                    dataType: "json",
                    type: "POST",
                    complete: function (e) {
                        alert("Successfully Updated!");
                        var grid = $("#grid").data("kendoGrid");
                        grid.dataSource.read();
                    }
                },
                destroy: {
                    url: '@Url.Action("Delete","ItmMas")',
                    contentType: 'application/json; charset=utf-8',
                    dataType: "json",
                    type: "POST",
                    complete: function (e) {
                        var grid = $("#grid").data("kendoGrid");
                        grid.dataSource.read();
                    }
                },
                create: {
                    url: '@Url.Action("Insert","ItmMas")',
                    contentType: 'application/json; charset=utf-8',
                    dataType: "json",
                    type: "POST",
                    complete: function (e) {
                        alert("Successfully Saved!");
                        var grid = $("#grid").data("kendoGrid");
                        grid.dataSource.read();
                    }
                },
                parameterMap: function (options, operation) {
                    if (operation == "create" && options.models) {
                        return JSON.stringify({ 'list': options.models, ItmTypKy: ItmTypKy }); // Parrameter name of the Controller Action method==> List<ToDoModel>emp
                    }
                    if (operation == "update" && options.models) {
                        return JSON.stringify({ 'list': options.models, ItmTypKy: ItmTypKy }); // Parrameter name of the Controller Action method==> List<ToDoModel>emp
                    }
                    if (operation == "destroy" && options.models) {
                        return JSON.stringify({ 'list': options.models, ItmTypKy: ItmTypKy }); // Parrameter name of the Controller Action method==> List<ToDoModel>emp
                    }
                    if (operation == "read") {
                        return ({
                            'ItmTypKy': ItmTypKy
                        })
                    }
                }
            },
            batch: true,
            pageSize: 20,

            schema: {
                model: {
                    id: "ItmKy",
                    fields: //Relavent fields of the grid should be bind with following model items
                    {
                        ItmKy: { editable: false, nullable: false, validation: { required: true }, type: "number" },
                        ItmCd: { editable: true, nullable: false, validation: { required: true }, validation: { required: true }, type: "string" },
                        ItmNm: { editable: true, nullable: true, type: "string" },
                        PartNo: { editable: true, nullable: true },
                        Unit: { editable: true, nullable: true },
                        UnitKy: { editable: true, nullable: true },
                        UsageUnit: { editable: true, nullable: true },
                        UsageUnitKy: { editable: true, nullable: true },
                        Units: { editable: true, nullable: true },
                        Cat1Cd: { editable: true, nullable: true, type: "string" },
                        Cat2Cd: { editable: true, nullable: true, type: "string" },
                        Cat3Cd: { editable: true, nullable: true, type: "string" },
                        Cat4Cd: { editable: true, nullable: true, type: "string" },
                        Cat5Cd: { editable: true, nullable: true, type: "string" },
                        Cat6Cd: { editable: true, nullable: true, type: "string" },
                        Make: { editable: false, nullable: false, type: "string" },
                        Model: { editable: true, nullable: false, type: "string" },
                        //Des: { editable: true, nullable: false, type: "string" },

                    }
                }
            }
        });

        //$(function () {
        //    $('#grid').on('click', '.chkbxAct', function () {
        //        var checked = $(this).is(':checked');
        //        var grid = $('#grid').data().kendoGrid;
        //        var selectedItem = grid.dataItem(grid.select());
        //        var PrjKy = selectedItem.PrjKy;
        //        if (PrjKy != "") {
        //            SetIsActAndIsApr(PrjKy, checked, "IsAct");
        //        } else {
        //            $(this).attr("disabled", true);
        //        }


        //    })
        //})

        //$(function () {
        //    $('#grid').on('click', '.chkbxApr', function () {

        //        var checked = $(this).is(':checked');
        //        var grid = $('#grid').data().kendoGrid;
        //        var selectedItem = grid.dataItem(grid.select());
        //        var PrjKy = selectedItem.PrjKy;
        //        if (PrjKy != "") {
        //            SetIsActAndIsApr(PrjKy, checked, "IsApr");
        //        } else {
        //            $(this).attr("disabled", true);
        //        }
        //    });
        //});

     @*   function SetIsActAndIsApr(PrjKy, checked, Item) {

            var prjky = PrjKy;
            var chkd = checked;
            var val = 0;
            if (chkd) {
                val = 1;
            }
            var itm = Item;
            $.ajax({
                url: '@Url.Action("SetIsActAndIsApr","Admin")',
            data: {
                'PrjKy': prjky,
                'value': val,
                'item': Item
            },
            dataType: "json",
            type: 'POST',
            success: function (data) {
                alert("" + data);
            },
            error: function (e) {
                //  alert("error");
            }
        });
            var grid = $("#grid").data("kendoGrid");
            grid.dataSource.read();
        }*@



        $("#grid").kendoGrid({
            dataSource: griddataSource,
            autobind: true,

            navigatable: true,

            selectable: "row",
            pageable: {
                refresh: true, pageSizes: [5, 10, 20, 50, 100, 150, 200, 300],
            },
            toolbar: [{ name: "create", text: "Add new record" }, "save", "cancel"],
            columnMenu: true,
            columnHide: createFilterRow,
            columnShow: createFilterRow,
            filterable: true,
            columns: [
                    {
                        field: "ItmKy", title: "Ref #", width: "100px",
                        locked: true,
                        lockable: false,
                    },
                    {
                        field: "ItmCd",
                        title: "Item Cd",
                        locked: true,
                        lockable: false,
                        width: "150px",
                    },
                      {
                          field: "ItmNm", title: "Item Name", width: "150px",
                          locked: true,
                      },
                     { field: "PartNo", title: "Part No", width: "100px" },
                {
                    field: "Unit", title: "Unit", width: "100px",
                    editor: function (container, options) {
                        var model = options.model;

                        $('<input id="cmbUnitKy" name="' + options.field + '"/>').appendTo(container).kendoComboBox({
                            dataSource: {
                                type: "POST",
                                transport: {
                                    read: {
                                        url: '@Url.Action("GetUnit","ItmMas")',

                                    }
                                }
                            },
                            change: function (e) {

                                combo = e.sender;
                                selectedItm = combo.select();
                                dataItem = combo.dataItem(selectedItm);

                                model.set("UnitKy", dataItem.UnitKy);
                                model.set("Unit", dataItem.Unit);
                            },
                            dataValueField: "UnitKy",
                            dataTextField: "Unit",
                            dataBound: function (e) {
                            }
                        });
                    }
                },
                { field: "UsageUnit", title: "UsageUnit", width: "150px", hidden:true },
                  { field: "Units", title: "Units", width: "150px" },

                {
                    field: "Cat1Cd",
                    title: "Item Cat1",
                    width: "120px",
                    editor: function (container, options) {
                        var model = options.model;

                        $('<input id="cmbCat1Cd" name="' + options.field + '"/>').appendTo(container).kendoComboBox({
                            dataSource: {
                                type: "POST",
                                transport: {
                                    read: {
                                        url: '@Url.Action("ItmCat1Nm","ItmMas")',

                                    }
                                }
                            },
                            change: function (e) {

                                combo = e.sender;
                                selectedItm = combo.select();
                                dataItem = combo.dataItem(selectedItm);

                                model.set("ItmCat1Ky", dataItem.CdKy);
                                model.set("Cat1Cd", dataItem.Code);
                            },

                            dataValueField: "CdKy",
                            dataTextField: "Code",
                            dataBound: function (e) {
                            }
                        });
                    }
                },

                {
                    field: "Cat2Cd",
                    title: "Item Cat2",

                    width: "120px",
                    editor: function (container, options) {
                        var model = options.model;

                        $('<input id="cmbCat2Cd" name="' + options.field + '"/>').appendTo(container).kendoComboBox({
                            dataSource: {
                                type: "POST",
                                transport: {
                                    read: {
                                        url: '@Url.Action("ItmCat2Nm","ItmMas")',

                                    }
                                }
                            },
                            change: function (e) {

                                combo = e.sender;
                                selectedItm = combo.select();
                                dataItem = combo.dataItem(selectedItm);

                                model.set("ItmCat2Ky", dataItem.CdKy);
                                model.set("Cat2Cd", dataItem.Code);
                            },
                            dataValueField: "CdKy",
                            dataTextField: "Code",
                            dataBound: function (e) {
                            }
                        });
                    }
                },

                {

                    field: "Cat3Cd",
                    title: "Item Cat3",
                    width: "100px",
                    editor: function (container, options) {
                        var model = options.model;

                        $('<input id="cmbCat3Cd" value="' + options.field + '" name="' + options.field + '"/>').appendTo(container).kendoComboBox({
                            dataSource: {
                                type: "POST",
                                transport: {
                                    read: {
                                        url: '@Url.Action("ItmCat3Nm","ItmMas")',

                                    }
                                }
                            },
                            change: function (e) {

                                combo = e.sender;
                                selectedItm = combo.select();
                                dataItem = combo.dataItem(selectedItm);

                                model.set("ItmCat3Ky", dataItem.CdKy);
                                model.set("Cat3Cd", dataItem.Code);
                                //model.set("CdNm", dataItem.CdNm);
                            },
                            dataValueField: "CdKy",
                            dataTextField: "Code",
                            dataBound: function (e) {
                            }
                        });
                    }
                },
                {
                    field: "Cat4Cd",
                    title: "Item Cat4",
                    width: "100px",
                    editor: function (container, options) {
                        var model = options.model;

                        $('<input id="cmbCat4Cd" name="' + options.field + '"/>').appendTo(container).kendoComboBox({
                            dataSource: {
                                type: "POST",
                                transport: {
                                    read: {
                                        url: '@Url.Action("ItmCat4Nm","ItmMas")',

                                    }
                                }
                            },
                            change: function (e) {

                                combo = e.sender;
                                selectedItm = combo.select();
                                dataItem = combo.dataItem(selectedItm);

                                model.set("ItmCat4Ky", dataItem.CdKy);
                                model.set("Cat4Cd", dataItem.Code);
                            },
                            dataValueField: "CdKy",
                            dataTextField: "Code",
                            dataBound: function (e) {
                            }
                        });
                    }

                },
                 {
                     field: "Cat5Cd",
                     title: "Item Cat5",
                     width: "100px",
                     editor: function (container, options) {
                         var model = options.model;

                         $('<input id="cmbCat5Cd" name="' + options.field + '"/>').appendTo(container).kendoComboBox({
                             dataSource: {
                                 type: "POST",
                                 transport: {
                                     read: {
                                         url: '@Url.Action("ItmCat5Nm","ItmMas")',

                                     }
                                 }
                             },
                             change: function (e) {

                                 combo = e.sender;
                                 selectedItm = combo.select();
                                 dataItem = combo.dataItem(selectedItm);

                                 model.set("ItmCat5Ky", dataItem.CdKy);
                                 model.set("Cat5Cd", dataItem.Code);
                             },
                             dataValueField: "CdKy",
                             dataTextField: "Code",
                             dataBound: function (e) {
                             }
                         });
                     }

                 },
                  {
                      field: "Cat6Cd",
                      title: "Item Cat6",
                      width: "100px",
                      editor: function (container, options) {
                          var model = options.model;

                          $('<input id="cmbCat6Cd" name="' + options.field + '"/>').appendTo(container).kendoComboBox({
                              dataSource: {
                                  type: "POST",
                                  transport: {
                                      read: {
                                          url: '@Url.Action("ItmCat6Nm","ItmMas")',

                                      }
                                  }
                              },
                              change: function (e) {

                                  combo = e.sender;
                                  selectedItm = combo.select();
                                  dataItem = combo.dataItem(selectedItm);

                                  model.set("ItmCat6Ky", dataItem.CdKy);
                                  model.set("Cat6Cd", dataItem.Code);
                              },
                              dataValueField: "CdKy",
                              dataTextField: "Code",
                              dataBound: function (e) {
                              }
                          });
                      }

                  },
                 {
                     field: "Make", title: "Make", width: "150px",
                 },
                {
                    field: "Model", title: "Model", width: "150px",
                },




            ],

            resizable: true,

            dataBinding: function () {
                record = (this.dataSource.page() - 1) * this.dataSource.pageSize();
            },
            dataBound: GridOnDataBound,
            editable: true
        });
              createFilterRow();

          }

          function GridOnDataBound(arg) {

              //dataView = this.dataSource.view();
              //        var grid = $("#grid").data("kendoGrid");

              //        var rowObjs = grid.tbody[0].rows;

              //        for (var i = 0; i < dataView.length; i++) {
              //            var name = SetPrj(dataView[i].PrjTypKy);
              //            dataView[i].PrjTyp = name;
              //            grid.dataSource.data()[i].set("PrjTyp", name);
              //        }
          }

          function GridOnDataBinding(arg) {
              record = (this.dataSource.page() - 1) * this.dataSource.pageSize();
          }

          function GridOnChange(arg) {

          }



          $("#grid").delegate("tbody>tr", "dblclick", function () {
              var gview = $("#grid").data("kendoGrid");
              var selectedItem = gview.dataItem(gview.select());
              var ItmKy = selectedItem.ItmKy;
              var ItmCd = selectedItem.ItmCd;
              var ItmNm = selectedItem.ItmNm;




              $.ajax({
                  url: '@Url.Action("GetItmTypKy", "ItmMas")',
                  data: { ConCd: "ItmTyp", OurCd: "RM" },
            dataType: "Json",
            type: "POST",
            success: function (data) {
                var CdKy = data.CdKy;

                $("#ResourceAnalysisWin").show().kendoWindow({
                    width: "1100px",
                    height: "550px",
                    modal: true,
                    title: "View And Manage Resource"
                });

                LoadItemComponentGrid(ItmKy);
                $("#GridWin").show();
                LoadGridView1();
                LoadHdr(ItmKy);
                $("#FinItmKy").val(ItmKy);
                $("#FinItm").val(ItmNm);
                $('#ResourceAnalysisWin').data('kendoWindow').center().open();
            }
        });


                //    },
                //    error: function () {
                //        return false;
                //    }
                //});

            });

        function deleteme(key) {
            var ItmKy = key;
            var answer = confirm("Confirm to delete this record");
            if (answer) {
                $.ajax({
                    url: '@Url.Content("~/ItmMas/DeleteItmMas")',
                               dataType: "json",
                               type: "POST",
                               data: {
                                   'key': ItmKy,
                               },
                               success: function (data) {
                                   var grid = $("#grid").data("kendoGrid");
                                   grid.dataSource.read();
                               },
                               error: function (e) {

                               }
                           });
                       }
                   }

                   $("#grid").on("keydown", function (event) {

                       //alert(">>>e.which is :" + event.which + " and e.keyCode is:" + event.keyCode);
                       if ((event.keyCode == 46) || (event.which == 46)) {
                           var entityGrid = $("#grid").data("kendoGrid");
                           var selectedItem = entityGrid.dataItem(entityGrid.select());
                           deleteme(selectedItem.ItmKy);
                       }

                   });



                   //$(".k-link.k-pager-nav").click, function () {
                   //    alert();
                   //}
    </script>